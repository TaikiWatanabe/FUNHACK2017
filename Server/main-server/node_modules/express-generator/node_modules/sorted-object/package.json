{
  "name": "sorted-object",
  "description": "Returns a copy of an object with its keys sorted",
  "keywords": [
    "sort",
    "keys",
    "object"
  ],
  "version": "2.0.0",
  "author": {
    "name": "Domenic Denicola",
    "email": "d@domenic.me",
    "url": "https://domenic.me/"
  },
  "license": "WTFPL",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/domenic/sorted-object.git"
  },
  "main": "lib/sorted-object.js",
  "files": [
    "lib/"
  ],
  "scripts": {
    "test": "tape test/tests.js",
    "lint": "eslint ."
  },
  "devDependencies": {
    "eslint": "^2.4.0",
    "tape": "^4.5.1"
  },
  "gitHead": "3cbdde212c8ceef219fbb8fa7805bfc38b94aa90",
  "bugs": {
    "url": "https://github.com/domenic/sorted-object/issues"
  },
  "homepage": "https://github.com/domenic/sorted-object#readme",
  "_id": "sorted-object@2.0.0",
  "_shasum": "1cfea981609047d8043807a490a9d99b317faf7f",
  "_from": "sorted-object@2.0.0",
  "_npmVersion": "3.6.0",
  "_nodeVersion": "5.7.1",
  "_npmUser": {
    "name": "domenic",
    "email": "d@domenic.me"
  },
  "dist": {
    "shasum": "1cfea981609047d8043807a490a9d99b317faf7f",
    "tarball": "https://registry.npmjs.org/sorted-object/-/sorted-object-2.0.0.tgz"
  },
  "maintainers": [
    {
      "name": "domenic",
      "email": "domenic@domenicdenicola.com"
    }
  ],
  "_npmOperationalInternal": {
    "host": "packages-12-west.internal.npmjs.com",
    "tmp": "tmp/sorted-object-2.0.0.tgz_1457910693572_0.6718082851730287"
  },
  "directories": {},
  "_resolved": "https://registry.npmjs.org/sorted-object/-/sorted-object-2.0.0.tgz",
  "readme": "# Get a Version of an Object with Sorted Keys\n\nAlthough objects in JavaScript are theoretically unsorted, in practice most engines use insertion orderâ€”at least, ignoring numeric keys. This manifests itself most prominently when dealing with an object's JSON serialization.\n\nSo, for example, you might be trying to serialize some object to a JSON file. But every time you write it, it ends up being output in a different order, depending on how you created it in the first place! This makes for some ugly diffs.\n\n**sorted-object** gives you the answer. Just use this package to create a version of your object with its keys sorted before serializing, and you'll get a consistent order every time.\n\n```js\nvar sortedObject = require(\"sorted-object\");\n\nvar objectToSerialize = generateStuffNondeterministically();\n\n// Before:\nfs.writeFileSync(\"dest.json\", JSON.stringify(objectToSerialize));\n\n// After:\nvar sortedVersion = sortedObject(objectToSerialize);\nfs.writeFileSync(\"dest.json\", JSON.stringify(sortedVersion));\n```\n",
  "readmeFilename": "README.md"
}
